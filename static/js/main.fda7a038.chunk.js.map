{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAIN,EAAMI,QAAQG,YCFbC,G,MAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC0CjEG,E,kDAzCd,aAAe,IAAD,8BACb,gBAcDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IALD,E,qDASd,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAOzC,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YAIZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAElD,OACC,sBAAKhC,UAAU,MAAf,UAEC,kDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GApCNK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fda7a038.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = props=> (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2> { props.monster.name} </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => {\r\n\r\n    return <div className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster => ( \r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n}","import React from 'react';\r\n\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className=\"search\" type='search' placeholder={placeholder} onChange={handleChange} />\r\n)","import './App.css';\nimport {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({monsters: users}));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({searchField: e.target.value});\n\t}\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\t// the above is the same with\n\t\t// const monsters = this.state.monsters;\n\t\t// const searchField = this.state.searchField;\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\t\tmonster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n\t\t\t)\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* <input type='search' placeholder='search monsters' onChange={e => this.setState({searchField: e.target.value})} /> */}\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox \n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}